#!/bin/bash

DIRNAME=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
PROJECT_ROOT=$( cd "$DIRNAME/.." && pwd )

set -e

cd "$PROJECT_ROOT/src"

# generate lavaca.js (shortcuts for importing lavaca modules)
printf '/* GENERATED by `npm run-script build` */\n' > lavaca.js
find . -name '*.js' | \
while read filepath; do
  filename=$( echo "$filepath" | perl -pe 's,.*/(.*?)\.js,\1,g' )
  printf "export { default as %s } from '%s';\n" "$filename" "$filepath"
done >> lavaca.js

cd "$PROJECT_ROOT"

set -x

case "$1" in
es)
  mkdir -p build/es
  cp README.md build/es/
  cp CONTRIBUTING.md build/es/
  cp -a src/* build/es/
  cat package.json \
  | node _scripts/changePackageName.js lavaca \
  > build/es/package.json
  ;;
amd)
  mkdir -p build/amd
  cp README.md build/amd/
  cp CONTRIBUTING.md build/amd/
  cp _scripts/.babelrc.amd .babelrc
  ./node_modules/babel-cli/bin/babel.js src -d build/amd
  cat package.json \
  | node _scripts/changePackageName.js lavaca-amd \
  > build/amd/package.json
  ;;
commonjs)
  mkdir -p build/commonjs
  cp README.md build/commonjs/
  cp CONTRIBUTING.md build/commonjs/
  cp _scripts/.babelrc.commonjs .babelrc
  ./node_modules/babel-cli/bin/babel.js src -d build/commonjs
  cat package.json \
  | node _scripts/changePackageName.js lavaca-commonjs \
  > build/commonjs/package.json
  ;;
--all)
  ./_scripts/build es
  ./_scripts/build amd
  ./_scripts/build commonjs
  ;;
esac

# remove generated src/lavaca.js (to make it clear it's generated and
# shouldn't be edited even though it's in src/)
if [[ -e src/lavaca.js ]]; then
  rm src/lavaca.js
fi
